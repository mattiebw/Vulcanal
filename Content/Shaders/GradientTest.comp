#version 460

layout (local_size_x = 16, local_size_y = 16) in;
layout (rgba16f, set = 0, binding = 0) uniform image2D image;

layout ( push_constant ) uniform constants
{
    vec4 ColourOne;
    vec4 ColourTwo;
    vec4 ColourThree;
    vec3 ColourPoints;
} PushConstants;

void main()
{
    ivec2 texelCoord = ivec2(gl_GlobalInvocationID.xy);
    ivec2 size = imageSize(image);

    if (texelCoord.x < size.x && texelCoord.y < size.y)
    {
        vec4 color = vec4(0.0, 0.0, 0.0, 1.0);
        
        float t = float(texelCoord.x) / float(size.x);
        if (t < PushConstants.ColourPoints.x)
        {
            color = PushConstants.ColourOne;
        }
        else if (t < PushConstants.ColourPoints.y)
        {
            color = mix(PushConstants.ColourOne, PushConstants.ColourTwo, 
                        clamp((t - PushConstants.ColourPoints.x) / (PushConstants.ColourPoints.y - PushConstants.ColourPoints.x), 0, 1));
        }
        else if (t < PushConstants.ColourPoints.z)
        {
            color = mix(PushConstants.ColourTwo, PushConstants.ColourThree, 
                        clamp((t - PushConstants.ColourPoints.y) / (PushConstants.ColourPoints.z - PushConstants.ColourPoints.y), 0, 1));
        }
        else
        {
            color = PushConstants.ColourThree;
        }

        imageStore(image, texelCoord, color);
    }
}
